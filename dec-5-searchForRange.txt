Write a function that takes in a sorted array of integers as well as a target integer.
The function should use a variation of the Binary Search algorithm to find a
range of indices in between which the target number is contained in the array and 
should return this range in the form of an array. The first number in the output
array should represent the first index at which the target number is located while
the second number should represent the last index at which the target number
is located. The function should return [-1, -1] if the number is not contained in the array.


Sample input: [0, 1, 21, 33, 45, 45, 45, 45, 45, 45, 61, 71, 73], 45
Sample output: [4, 9]


function searchForRange(array, target) {
  let result = []
  result[0] = rangeHelper(array,target,0, array.length - 1, true)
  result[1] = rangeHelper(array,target, 0, array.length - 1,false)
  return result
}

function rangeHelper(array,target,lp, rp,goLeft) {
  let left = lp
  let right = rp
  while(left <= right){
    let midIdx = Math.floor((left + right) / 2)
    let midValue = array[midIdx]
    if(midValue === target){
      if(goLeft){
        if(midIdx === 0 || array[midIdx - 1] !== target){
          return midIdx 
        }else {
          right = midIdx - 1
        }
      }else {
        if(midIdx === array.length - 1 || array[midIdx + 1] !== target){
          return midIdx
        }else {
          left = midIdx + 1
        }
      }
    
    }else if(target < midValue) {
      right = midIdx - 1
    }else {
      left = midIdx + 1
    }
  }
  return -1
} // Number


